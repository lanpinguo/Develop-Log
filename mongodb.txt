
Installing mongodb:

orangepi@Orangepi:~$ sudo apt install mongodb

UTILITIES

  mongodump         - Create a binary dump of the contents of a database.
  mongorestore      - Restore data from the output created by mongodump.
  mongoexport       - Export the contents of a collection to JSON or CSV.
  mongoimport       - Import data from JSON, CSV or TSV.
  mongofiles        - Put, get and delete files from GridFS.
  mongostat         - Show the status of a running mongod/mongos.
  bsondump          - Convert BSON files into human-readable formats.
  mongoreplay       - Traffic capture and replay tool.
  mongotop          - Track time spent reading and writing data.
  install_compass   - Installs MongoDB Compass for your platform.


Installing python driver:

Installing with pip
We recommend using pip to install pymongo on all platforms:

$ python -m pip install pymongo
To get a specific version of pymongo:

$ python -m pip install pymongo==3.5.1
To upgrade using pip:

$ python -m pip install --upgrade pymongo



Note:
Getting a Database
A single instance of MongoDB can support multiple independent databases. When working with PyMongo you access databases using attribute style access on MongoClient instances:

>>> db = client.test_database
If your database name is such that using attribute style access wonâ€™t work (like test-database), you can use dictionary style access instead:

>>> db = client['test-database']
Getting a Collection
A collection is a group of documents stored in MongoDB, and can be thought of as roughly the equivalent of a table in a relational database. Getting a collection in PyMongo works the same as getting a database:

>>> collection = db.test_collection
or (using dictionary style access):

>>> collection = db['test-collection']
An important note about collections (and databases) in MongoDB is that they are created lazily - none of the above commands have actually performed any operations on the MongoDB server. Collections and databases are created when the first document is inserted into them.

delete a database:
husq-4668@husq4668-OptiPlex:/$mongo 192.168.2.200/air_quality_database
MongoDB shell version v3.6.3
connecting to: mongodb://192.168.2.200:27017/air_quality_database
MongoDB server version: 2.6.10
WARNING: shell and server versions do not match
> db.runCommand( { dropDatabase: 1 } )
{ "dropped" : "air_quality_database", "ok" : 1 }
> exit

